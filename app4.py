# -*- coding: utf-8 -*-
"""Untitled6.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VK0AHJBTbmmwqAJ17qnrjNJdJf-WKVLY
"""

import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
from statsmodels.tsa.holtwinters import ExponentialSmoothing
from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score

st.title("Exponential Smoothing on Exchange Rate Data")

uploaded_file = st.file_uploader("Upload a CSV file with 'Date' and 'exchange_rate' columns", type=["csv"])

if uploaded_file is not None:
    # Read CSV from uploaded file
    model_df = pd.read_csv(uploaded_file)

    # Preprocess
    model_df['Date'] = pd.to_datetime(model_df['Date'])
    model_df.set_index('Date', inplace=True)

    # Fit model
    es_model = ExponentialSmoothing(
        model_df['exchange_rate'],
        trend='add',
        seasonal=None,
        initialization_method='estimated'
    ).fit()

    model_df['exchange_rate_es'] = es_model.fittedvalues

    # Display model parameters
    st.subheader("Model Parameters")
    st.write(es_model.params)

    # Calculate and display metrics
    mse = mean_squared_error(model_df['exchange_rate'], model_df['exchange_rate_es'])
    mae = mean_absolute_error(model_df['exchange_rate'], model_df['exchange_rate_es'])
    r2 = r2_score(model_df['exchange_rate'], model_df['exchange_rate_es'])

    st.subheader("Performance Metrics")
    st.write(f"MSE: {mse:.3f}")
    st.write(f"MAE: {mae:.3f}")
    st.write(f"R2: {r2:.3f}")

    # Plot actual vs fitted
    fig, ax = plt.